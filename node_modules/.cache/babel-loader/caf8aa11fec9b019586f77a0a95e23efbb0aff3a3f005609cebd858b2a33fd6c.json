{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { bus } from '../main';\nexport default {\n  data() {\n    return {\n      loading: true,\n      productsData: [],\n      page: 1,\n      pageSize: 6,\n      filteredArray: []\n    };\n  },\n  props: {},\n  methods: {\n    fetchCategoryData(categoryList) {\n      if (categoryList.length >= 2) {\n        const category = categoryList[categoryList.length - 1];\n        axios.get(`https://dummyjson.com/products/category/${category}`).then(response => {\n          this.loading = false;\n          const categoryData = response.data.products;\n          categoryData.forEach(item => {\n            this.productsData.push(item);\n          });\n          this.filteredArray = this.productsData.filter(obj => categoryList.includes(obj.category));\n          this.productsData = this.filteredArray;\n        }).catch(err => {\n          console.log(err);\n        });\n      } else if (categoryList.length == 1) {\n        // const category = categoryList[categoryList.length - 1];\n        console.log(\"Hi\");\n        axios.get(`https://dummyjson.com/products/category/${categoryList}`).then(response => {\n          this.loading = false;\n          console.log(response.data.products);\n          this.productsData = response.data.products;\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    },\n    setPage(val) {\n      this.page = val;\n    }\n  },\n  computed: {\n    pagedProductsData() {\n      return this.productsData.slice(this.pageSize * this.page - this.pageSize, this.pageSize * this.page);\n    }\n  },\n  created() {\n    bus.$on('filter-change', data => {\n      // const category = data[data.length - 1];\n      this.fetchCategoryData(data);\n    });\n  }\n};","map":{"version":3,"names":["axios","bus","data","loading","productsData","page","pageSize","filteredArray","props","methods","fetchCategoryData","categoryList","length","category","get","then","response","categoryData","products","forEach","item","push","filter","obj","includes","catch","err","console","log","setPage","val","computed","pagedProductsData","slice","created","$on"],"sources":["src/components/CategoryTable.vue"],"sourcesContent":["<template>\n    <div  class=\"search-table\">\n        <template>\n            <el-table\n            v-loading=\"loading\"\n            :data=\"productsData\"\n            style=\"width: 100%\">\n            <el-table-column\n                prop=\"title\"\n                label=\"Name\"\n                width=\"180\">\n            </el-table-column>\n            <el-table-column label=\"Image\" width=\"160\">\n                <template slot-scope=\"scope\">\n                    <img :src=\"scope.row.images[0]\" alt=\"Image\" width=\"100\" height=\"80\">\n                </template>\n            </el-table-column>\n            <el-table-column\n                prop=\"description\"\n                label=\"Description\">\n            </el-table-column>\n            <el-table-column\n                prop=\"price\"\n                label=\"Price ($)\"\n                width=\"100\">\n            </el-table-column>\n            <el-table-column\n            prop=\"category\"\n            label=\"Category\"\n            width=\"180\"\n            filter-placement=\"bottom-end\">\n            <template slot-scope=\"scope\">\n                <el-tag\n                :type=\"scope.row.category === 'smartphones' ? 'primary' : 'success'\"\n                disable-transitions>{{scope.row.category}}</el-tag>\n            </template>\n            </el-table-column>\n            </el-table>\n            <div class=\"page-row\">\n                <el-pagination background layout=\"prev, pager, next\" :total=\"this.productsData.length\" @current-change=\"setPage\">\n                </el-pagination>\n                <p class=\"small-text\">Showing {{ page }} of 3</p>\n            </div>\n        </template>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { bus } from '../main'\n\n  export default {\n    data() {\n        return {\n            loading: true,\n            productsData: [],\n            page: 1,\n            pageSize: 6,\n            filteredArray: []\n        }\n    },\n    props: {\n\n    },\n    methods: {\n        fetchCategoryData(categoryList) {\n            if (categoryList.length >= 2) {\n                const category = categoryList[categoryList.length - 1];\n                axios.get(`https://dummyjson.com/products/category/${category}`).then((response) => {\n                    this.loading = false;   \n                    const categoryData = response.data.products;\n                    categoryData.forEach((item) => {\n                        this.productsData.push(item);\n                    })\n\n                    this.filteredArray = this.productsData.filter(obj => categoryList.includes(obj.category));\n                    this.productsData = this.filteredArray;\n\n                }).catch((err) => {\n                    console.log(err);\n                })\n            } else if(categoryList.length == 1) {\n                // const category = categoryList[categoryList.length - 1];\n                console.log(\"Hi\");\n                axios.get(`https://dummyjson.com/products/category/${categoryList}`).then((response) => {\n                    this.loading = false;   \n                    console.log(response.data.products);\n                    this.productsData = response.data.products;\n                }).catch((err) => {\n                    console.log(err);\n                })\n            }\n\n        },\n        setPage(val) {\n            this.page = val;\n        },\n    },\n    computed: {\n        pagedProductsData() {\n            return this.productsData.slice(this.pageSize * this.page - this.pageSize, this.pageSize * this.page)\n        }\n    },\n    created() {\n        bus.$on('filter-change', (data) => {\n            // const category = data[data.length - 1];\n            this.fetchCategoryData(data);\n        });\n    }\n  }\n</script>\n  \n\n<style scoped>\n\n\n\n</style>\n  "],"mappings":";AAgDA,OAAAA,KAAA;AACA,SAAAC,GAAA;AAEA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,YAAA;MACAC,IAAA;MACAC,QAAA;MACAC,aAAA;IACA;EACA;EACAC,KAAA,GAEA;EACAC,OAAA;IACAC,kBAAAC,YAAA;MACA,IAAAA,YAAA,CAAAC,MAAA;QACA,MAAAC,QAAA,GAAAF,YAAA,CAAAA,YAAA,CAAAC,MAAA;QACAZ,KAAA,CAAAc,GAAA,4CAAAD,QAAA,IAAAE,IAAA,CAAAC,QAAA;UACA,KAAAb,OAAA;UACA,MAAAc,YAAA,GAAAD,QAAA,CAAAd,IAAA,CAAAgB,QAAA;UACAD,YAAA,CAAAE,OAAA,CAAAC,IAAA;YACA,KAAAhB,YAAA,CAAAiB,IAAA,CAAAD,IAAA;UACA;UAEA,KAAAb,aAAA,QAAAH,YAAA,CAAAkB,MAAA,CAAAC,GAAA,IAAAZ,YAAA,CAAAa,QAAA,CAAAD,GAAA,CAAAV,QAAA;UACA,KAAAT,YAAA,QAAAG,aAAA;QAEA,GAAAkB,KAAA,CAAAC,GAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;QACA;MACA,WAAAf,YAAA,CAAAC,MAAA;QACA;QACAe,OAAA,CAAAC,GAAA;QACA5B,KAAA,CAAAc,GAAA,4CAAAH,YAAA,IAAAI,IAAA,CAAAC,QAAA;UACA,KAAAb,OAAA;UACAwB,OAAA,CAAAC,GAAA,CAAAZ,QAAA,CAAAd,IAAA,CAAAgB,QAAA;UACA,KAAAd,YAAA,GAAAY,QAAA,CAAAd,IAAA,CAAAgB,QAAA;QACA,GAAAO,KAAA,CAAAC,GAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;QACA;MACA;IAEA;IACAG,QAAAC,GAAA;MACA,KAAAzB,IAAA,GAAAyB,GAAA;IACA;EACA;EACAC,QAAA;IACAC,kBAAA;MACA,YAAA5B,YAAA,CAAA6B,KAAA,MAAA3B,QAAA,QAAAD,IAAA,QAAAC,QAAA,OAAAA,QAAA,QAAAD,IAAA;IACA;EACA;EACA6B,QAAA;IACAjC,GAAA,CAAAkC,GAAA,kBAAAjC,IAAA;MACA;MACA,KAAAQ,iBAAA,CAAAR,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}