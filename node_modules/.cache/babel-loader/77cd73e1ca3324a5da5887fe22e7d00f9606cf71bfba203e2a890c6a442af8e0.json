{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport SearchComponent from './Controls/SearchComponent.vue';\nimport FilterComponent from './Controls/FilterComponent.vue';\nimport axios from 'axios';\nexport default {\n  name: \"ProductsList\",\n  components: {\n    'search-comp': SearchComponent,\n    'filter-comp': FilterComponent\n  },\n  data() {\n    return {\n      loading: true,\n      productsData: [],\n      page: 1,\n      pageSize: 6,\n      nowShowing: '',\n      searchInput: '',\n      currentPage: null,\n      isDelete: false\n    };\n  },\n  mounted() {\n    this.showAllProducts(0);\n  },\n  methods: {\n    handleSearchedProduct(data, skipNumber) {\n      this.nowShowing = 'search';\n      this.searchInput = data;\n      this.page = 1;\n      this.currentPage = 1;\n      axios.get(`https://dummyjson.com/products/search?q=${data}&limit=6&skip=${skipNumber}`).then(response => {\n        this.loading = false;\n        this.productsData = response.data.products;\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    handleSelectedCategory(categoryList) {\n      if (categoryList.length == 0) {\n        this.showAllProducts(0);\n      }\n      if (categoryList.length >= 2) {\n        const category = categoryList[categoryList.length - 1];\n        axios.get(`https://dummyjson.com/products/category/${category}`).then(response => {\n          const categoryData = response.data.products;\n          categoryData.forEach(item => {\n            this.productsData.push(item);\n          });\n          this.filteredArray = this.productsData.filter(obj => categoryList.includes(obj.category));\n          this.productsData = this.filteredArray;\n        }).catch(err => console.log(err));\n      } else {\n        this.page = 1;\n        this.currentPage = 1;\n        this.nowShowing = 'category';\n        this.productsData = [];\n        this.loading = true;\n        const category = categoryList[categoryList.length - 1];\n        axios.get(`https://dummyjson.com/products/category/${category}`).then(response => {\n          this.loading = false;\n          this.productsData = response.data.products;\n        }).catch(err => console.log(err));\n      }\n    },\n    showAllProducts(skipNumber) {\n      this.nowShowing = 'products';\n      axios.get(`https://dummyjson.com/products?limit=6&skip=${skipNumber}`).then(response => {\n        this.loading = false;\n        this.productsData = response.data.products;\n      }).catch(err => console.log(err));\n    },\n    setPage(val) {\n      if (this.nowShowing === 'products') {\n        this.page = val;\n        const skipValue = this.page * this.pageSize - this.pageSize;\n        this.loading = true;\n        this.showAllProducts(skipValue);\n      } else if (this.nowShowing === 'search') {\n        this.page = val;\n        const skipValue = this.page * this.pageSize - this.pageSize;\n        this.loading = true;\n        this.handleSearchedProduct(this.searchInput, skipValue);\n      } else {\n        this.page = val;\n      }\n    },\n    handleDelete(index) {\n      axios.delete(`https://dummyjson.com/products/${index}`).then(response => {\n        console.log(\"Delete Success\" + response);\n        this.productsData.forEach((product, proIndex) => {\n          if (product.id === index) {\n            this.productsData.splice(proIndex, 1);\n          }\n        });\n      });\n    }\n  },\n  computed: {\n    pagedProductsData() {\n      if (this.nowShowing === 'category') {\n        return this.productsData.slice(this.pageSize * this.page - this.pageSize, this.pageSize * this.page);\n      } else {\n        return this.productsData;\n      }\n    }\n  }\n};","map":{"version":3,"names":["SearchComponent","FilterComponent","axios","name","components","data","loading","productsData","page","pageSize","nowShowing","searchInput","currentPage","isDelete","mounted","showAllProducts","methods","handleSearchedProduct","skipNumber","get","then","response","products","catch","err","console","log","handleSelectedCategory","categoryList","length","category","categoryData","forEach","item","push","filteredArray","filter","obj","includes","setPage","val","skipValue","handleDelete","index","delete","product","proIndex","id","splice","computed","pagedProductsData","slice"],"sources":["src/components/ProductsList.vue"],"sourcesContent":["<template>\n    <div>\n        <div id=\"controls\">\n            <search-comp @searchedText=\"handleSearchedProduct\"></search-comp>\n            <filter-comp @filter-change=\"handleSelectedCategory\"></filter-comp>\n        </div>\n        <div class=\"products\">\n            <el-table\n                v-loading=\"loading\"\n                :data=\"pagedProductsData\"\n                style=\"width: 100%\">\n                <el-table-column\n                    prop=\"title\"\n                    label=\"Name\"\n                    width=\"180\">\n                </el-table-column>\n                <el-table-column label=\"Image\" width=\"160\">\n                    <template slot-scope=\"scope\">\n                        <router-link :to=\"{name: 'product', params: { id: scope.row.id }}\">\n                            <img :src=\"scope.row.images[0]\" alt=\"Image\" width=\"100\" height=\"80\">\n                            {{scope.row.name}}\n                        </router-link>\n                    </template>\n                </el-table-column>\n                <el-table-column\n                    prop=\"description\"\n                    label=\"Description\"\n                    width=\"500\">\n                </el-table-column>\n                <el-table-column\n                    prop=\"price\"\n                    label=\"Price ($)\"\n                    width=\"100\">\n                </el-table-column>\n                <el-table-column\n                prop=\"category\"\n                label=\"Category\"\n                width=\"180\"\n                filter-placement=\"bottom-end\">\n                    <template slot-scope=\"scope\">\n                        <el-tag\n                        :type=\"scope.row.category === 'smartphones' ? 'primary' : 'success'\"\n                        disable-transitions>{{scope.row.category}}</el-tag>\n                    </template>\n                </el-table-column>\n                <el-table-column label=\"Actions\">\n                    <template slot-scope=\"scope\">\n                        <router-link :to=\"{name: 'product', params: { id: scope.row.id }}\">\n                            <el-button>View Product</el-button>\n                        </router-link>\n                            <el-button :loading=\"isDelete\" @click=\"handleDelete(scope.row.id)\">Delete</el-button>\n                        \n                    </template>\n                </el-table-column>\n            </el-table>\n            <div class=\"page-row\">\n                <el-pagination background layout=\"prev, pager, next\" :total=\"30\" @current-change=\"setPage\" :current-page=\"currentPage\">\n                </el-pagination>\n                <p class=\"small-text\">Showing {{ page }} of 3</p>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport SearchComponent from './Controls/SearchComponent.vue'\nimport FilterComponent from './Controls/FilterComponent.vue'\nimport axios from 'axios';\n\nexport default {\n    name:\"ProductsList\",\n    components:{\n        'search-comp': SearchComponent,\n        'filter-comp': FilterComponent\n    },\n    data() {\n        return {\n            loading: true,\n            productsData: [],\n            page: 1,\n            pageSize: 6,\n            nowShowing: '',\n            searchInput: '',\n            currentPage: null,\n            isDelete: false,\n        }\n    },\n    mounted(){\n        this.showAllProducts(0);\n    },\n    methods:{\n        handleSearchedProduct(data, skipNumber){\n            this.nowShowing = 'search';\n            this.searchInput = data;\n            this.page = 1;\n            this.currentPage = 1;\n            axios.get(`https://dummyjson.com/products/search?q=${data}&limit=6&skip=${skipNumber}`).then((response) => {\n                this.loading = false;   \n                this.productsData = response.data.products;\n            }).catch((err) => {\n                console.log(err);\n            })\n        },\n        handleSelectedCategory(categoryList){\n            if (categoryList.length == 0) {\n                this.showAllProducts(0);\n            }\n            if (categoryList.length >= 2) {\n                const category = categoryList[categoryList.length - 1];\n                axios.get(`https://dummyjson.com/products/category/${category}`).then((response) => {\n                    const categoryData = response.data.products;\n                    categoryData.forEach((item) => {\n                        this.productsData.push(item);\n                    })\n                    this.filteredArray = this.productsData.filter(obj => categoryList.includes(obj.category));\n                    this.productsData = this.filteredArray;\n                }).catch(err => console.log(err));\n            } else {\n                this.page = 1;\n                this.currentPage = 1;\n                this.nowShowing = 'category';\n                this.productsData = [];\n                this.loading = true;\n                const category = categoryList[categoryList.length - 1];\n                axios.get(`https://dummyjson.com/products/category/${category}`).then((response) => {\n                    this.loading = false;\n                    this.productsData = response.data.products;\n                }).catch(err => console.log(err))\n            }\n        },\n        showAllProducts(skipNumber){\n            this.nowShowing = 'products';\n            axios.get(`https://dummyjson.com/products?limit=6&skip=${skipNumber}`).then((response) => {\n                this.loading = false;\n                this.productsData = response.data.products\n            }).catch(err => console.log(err));\n        },\n        setPage(val) {\n            if (this.nowShowing === 'products') {\n                this.page = val;\n                const skipValue = this.page * this.pageSize - this.pageSize;\n                this.loading = true;\n                this.showAllProducts(skipValue);\n            } else if (this.nowShowing === 'search') {\n                this.page = val;\n                const skipValue = this.page * this.pageSize - this.pageSize;\n                this.loading = true;\n                this.handleSearchedProduct(this.searchInput, skipValue);\n            } else {\n                this.page = val;\n            }\n        },\n        handleDelete(index) {\n            axios.delete(`https://dummyjson.com/products/${index}`).then((response) => {\n                console.log(\"Delete Success\" + response);\n                this.productsData.forEach((product, proIndex) => {\n                if (product.id === index) {\n                    this.productsData.splice(proIndex, 1);\n                }\n            })\n            })\n            \n        }    \n    },\n    computed: {\n            pagedProductsData() {\n                if (this.nowShowing === 'category') {\n                    return this.productsData.slice(this.pageSize * this.page - this.pageSize, this.pageSize * this.page);\n                } else {\n                    return this.productsData;\n                }\n                \n            },\n    }\n}\n</script>\n\n<style scoped>\n.products {\n    margin-left: 50px;\n}\n\n#controls {\n    display: flex;\n    margin-left: 50px;\n}\n\n.page-row {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 30px; \n}\n\n</style>"],"mappings":";AAiEA,OAAAA,eAAA;AACA,OAAAC,eAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACA,eAAAJ,eAAA;IACA,eAAAC;EACA;EACAI,KAAA;IACA;MACAC,OAAA;MACAC,YAAA;MACAC,IAAA;MACAC,QAAA;MACAC,UAAA;MACAC,WAAA;MACAC,WAAA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,eAAA;EACA;EACAC,OAAA;IACAC,sBAAAZ,IAAA,EAAAa,UAAA;MACA,KAAAR,UAAA;MACA,KAAAC,WAAA,GAAAN,IAAA;MACA,KAAAG,IAAA;MACA,KAAAI,WAAA;MACAV,KAAA,CAAAiB,GAAA,4CAAAd,IAAA,iBAAAa,UAAA,IAAAE,IAAA,CAAAC,QAAA;QACA,KAAAf,OAAA;QACA,KAAAC,YAAA,GAAAc,QAAA,CAAAhB,IAAA,CAAAiB,QAAA;MACA,GAAAC,KAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;MACA;IACA;IACAG,uBAAAC,YAAA;MACA,IAAAA,YAAA,CAAAC,MAAA;QACA,KAAAd,eAAA;MACA;MACA,IAAAa,YAAA,CAAAC,MAAA;QACA,MAAAC,QAAA,GAAAF,YAAA,CAAAA,YAAA,CAAAC,MAAA;QACA3B,KAAA,CAAAiB,GAAA,4CAAAW,QAAA,IAAAV,IAAA,CAAAC,QAAA;UACA,MAAAU,YAAA,GAAAV,QAAA,CAAAhB,IAAA,CAAAiB,QAAA;UACAS,YAAA,CAAAC,OAAA,CAAAC,IAAA;YACA,KAAA1B,YAAA,CAAA2B,IAAA,CAAAD,IAAA;UACA;UACA,KAAAE,aAAA,QAAA5B,YAAA,CAAA6B,MAAA,CAAAC,GAAA,IAAAT,YAAA,CAAAU,QAAA,CAAAD,GAAA,CAAAP,QAAA;UACA,KAAAvB,YAAA,QAAA4B,aAAA;QACA,GAAAZ,KAAA,CAAAC,GAAA,IAAAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;MACA;QACA,KAAAhB,IAAA;QACA,KAAAI,WAAA;QACA,KAAAF,UAAA;QACA,KAAAH,YAAA;QACA,KAAAD,OAAA;QACA,MAAAwB,QAAA,GAAAF,YAAA,CAAAA,YAAA,CAAAC,MAAA;QACA3B,KAAA,CAAAiB,GAAA,4CAAAW,QAAA,IAAAV,IAAA,CAAAC,QAAA;UACA,KAAAf,OAAA;UACA,KAAAC,YAAA,GAAAc,QAAA,CAAAhB,IAAA,CAAAiB,QAAA;QACA,GAAAC,KAAA,CAAAC,GAAA,IAAAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;MACA;IACA;IACAT,gBAAAG,UAAA;MACA,KAAAR,UAAA;MACAR,KAAA,CAAAiB,GAAA,gDAAAD,UAAA,IAAAE,IAAA,CAAAC,QAAA;QACA,KAAAf,OAAA;QACA,KAAAC,YAAA,GAAAc,QAAA,CAAAhB,IAAA,CAAAiB,QAAA;MACA,GAAAC,KAAA,CAAAC,GAAA,IAAAC,OAAA,CAAAC,GAAA,CAAAF,GAAA;IACA;IACAe,QAAAC,GAAA;MACA,SAAA9B,UAAA;QACA,KAAAF,IAAA,GAAAgC,GAAA;QACA,MAAAC,SAAA,QAAAjC,IAAA,QAAAC,QAAA,QAAAA,QAAA;QACA,KAAAH,OAAA;QACA,KAAAS,eAAA,CAAA0B,SAAA;MACA,gBAAA/B,UAAA;QACA,KAAAF,IAAA,GAAAgC,GAAA;QACA,MAAAC,SAAA,QAAAjC,IAAA,QAAAC,QAAA,QAAAA,QAAA;QACA,KAAAH,OAAA;QACA,KAAAW,qBAAA,MAAAN,WAAA,EAAA8B,SAAA;MACA;QACA,KAAAjC,IAAA,GAAAgC,GAAA;MACA;IACA;IACAE,aAAAC,KAAA;MACAzC,KAAA,CAAA0C,MAAA,mCAAAD,KAAA,IAAAvB,IAAA,CAAAC,QAAA;QACAI,OAAA,CAAAC,GAAA,oBAAAL,QAAA;QACA,KAAAd,YAAA,CAAAyB,OAAA,EAAAa,OAAA,EAAAC,QAAA;UACA,IAAAD,OAAA,CAAAE,EAAA,KAAAJ,KAAA;YACA,KAAApC,YAAA,CAAAyC,MAAA,CAAAF,QAAA;UACA;QACA;MACA;IAEA;EACA;EACAG,QAAA;IACAC,kBAAA;MACA,SAAAxC,UAAA;QACA,YAAAH,YAAA,CAAA4C,KAAA,MAAA1C,QAAA,QAAAD,IAAA,QAAAC,QAAA,OAAAA,QAAA,QAAAD,IAAA;MACA;QACA,YAAAD,YAAA;MACA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}